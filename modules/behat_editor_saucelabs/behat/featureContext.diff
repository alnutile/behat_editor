3,9c3
< use Behat\Behat\Context\ClosuredContextInterface,
<     Behat\Behat\Context\TranslatedContextInterface,
<     Behat\Behat\Context\BehatContext,
<     Behat\Behat\Exception\PendingException;
< use Behat\Gherkin\Node\PyStringNode,
<     Behat\Gherkin\Node\TableNode;
< use Behat\MinkExtension\Context\MinkContext;
---
> use Pfizer\Behat\Context\PfizerContext;
11c5
< class FeatureContext extends MinkContext
---
> class FeatureContext extends PfizerContext
57,68c51,62
<             case 'small':
<                 $css_class = 'textsizesm';
<                 break;
< 
<             case 'large':
<                 $css_class = 'textsizelg';
<                 break;
< 
<             case 'medium':
<                 // Fall through.
<             default:
<                 $css_class = 'textsizemed';
---
>           case 'small':
>             $css_class = 'textsizesm';
>             break;
> 
>           case 'large':
>             $css_class = 'textsizelg';
>             break;
> 
>           case 'medium':
>           // Fall through.
>           default:
>             $css_class = 'textsizemed';
86,87c80,81
<      * @Given /^I click the "([^"]*)" form submit button in the "([^"]*)" form$/
<      */
---
>     * @Given /^I click the "([^"]*)" form submit button in the "([^"]*)" form$/
>     */
94,298c88
< 
<     /**
<      * @Given /^I wait$/
<      */
<     public function iWait()
<     {
<         $this->getSession()->wait(3000,
<             "jQuery('.alert.alert-info a').text() == 'click here'"
<         );
<     }
< 
<     /**
<      * @Given /^I get redirected to home page$/
<      */
<     public function iGetRedirectedToHomePage()
<     {
<         $this->getSession()->wait(3000,
<             "jQuery('a.logout-link').text() == 'Log out'"
<         );
<     }
< 
< 
<     /**
<      * @Given /^I follow savedTest$/
<      */
<     public function iFollowSavedtest()
<     {
<         $test_file = $this->getSession()->getPage()->find('css', 'a#test-file')->getAttribute('href');
<         $this->visit($test_file);
<     }
< 
<     /**
<      * @Given /^I fill in featuresTag$/
<      */
<     public function iFillInFeaturestag()
<     {
<         $registerForm = $this->getSession()->getPage()->find('css', 'form.scenario-builder');
<         $el = $registerForm->find('css', 'input.ui-widget-content');
<         $el->setValue('@tag1 ');
<     }
< 
<     /**
<      * @Given /^I fill in sectionOneTag$/
<      */
<     public function iFillInSectiononetag()
<     {
<         $registerForm = $this->getSession()->getPage()->find('css', 'form.scenario-builder');
<         $el = $registerForm->find('css', 'li.tagit-new input.ui-widget-content');
<         $el->setValue('@tag1 ');
<     }
< 
< 
<     /**
<      * @Given /^I fill in sectionTwoTag$/
<      */
<     public function iFillInSectiontwotag()
<     {
<         $registerForm = $this->getSession()->getPage()->find('css', 'form.scenario-builder');
<         $el = $registerForm->find('css', 'li.tagit-new input.ui-widget-content');
<         $el->setValue('@tag2 ');
<     }
< 
<     var $originalWindowName = '';
< 
<     /**
<      * Initializes context.
<      * Every scenario gets it's own context object.
<      *
<      * @param array $parameters context parameters (set them up through behat.yml)
<      */
<     public function __construct(array $parameters){
<         #Add initialization code here
<     }
< 
< 
<     /**
<      * @Then /^I switch to popup$/
<      */
<     public function iSwitchToPopup() {
<         $originalWindowName = $this->getSession()->getWindowName(); //Get the original name
<         if (empty($this->originalWindowName)) {
<             $this->originalWindowName = $originalWindowName;
<         }
< 
<         $this->getSession()->getPage()->pressButton("Confirm and Continue"); //Pressing the withdraw button
< 
<         $popupName = $this->getNewPopup($originalWindowName);
< 
<         //Switch to the popup Window
<         $this->getSession()->switchToWindow($popupName);
<     }
< 
<     /**
<      * @Then /^I should see cookie "([^"]*)"$/
<      */
<     public function iShouldSeeCookie($cookie_name) {
<         if($this->getSession()->getCookie('welcome_info_name') == $cookie_name) {
<             return TRUE;
<         } else {
<             throw new Exception('Cookie not found');
<         }
<     }
< 
<     /**
<      * @Then /^I wait for home page$/
<      */
<     public function iWaitForHomePage()
<     {
<         $this->getSession()->switchToWindow($this->originalWindowName);
<         $this->getSession()->wait(3000,
<             "jQuery('a.logout-link').text() == 'Log out'"
<         );
<     }
< 
<     /**
<      * @Then /^I see and press log out$/
<      */
<     public function iSeeAndPressLogOut()
<     {
<         $this->getSession()->switchToWindow($this->originalWindowName);
<         $log_out = $this->getSession()->getPage()->find('css', 'a.logout-link')->getAttribute('href');
<         $this->visit($log_out);
<     }
< 
<     /**
<      * @Then /^I switch back to original window$/
<      */
<     public function iSwitchBackToOriginalWindow() {
<         //Switch to the original window
<         $this->getSession()->switchToWindow($this->originalWindowName);
<     }
< 
<     /**
<      * @Then /^I wait till I see if page is redirected$/
<      */
<     public function iWaitTillISeeIfPageIsRedirected() {
<         //There is a redirect after log back to /login that then goes to home
<         //this tries to force that visit one mrore time
<         $this->getSession()->visit('http://www.pfizerondemand.eu/uk/home');
< 
<         if($this->getSession()->getCurrentUrl() == 'http://www.pfizerondemand.eu/uk/login?destination=node/457') {
<             //throw new Exception('Looks like you where redirected back to the login page');
<         }
<     }
< 
<     /**
<      * @Then /^I destroy my cookies$/
<      */
<     public function iDestroyMyCookies() {
<         $this->getSession()->reset();
<     }
< 
<     /**
<      * @Then /^the url should redirect to "([^"]*)"$/
<      */
<     public function theUrlShouldRedirectTo($arg1)
<     {
<         if($this->getSession()->getCurrentUrl() != $arg1) {
<             throw new Exception('You are not on the expected URL');
<         }
<     }
< 
<     /**
<      * @Given /^I ponder life$/
<      */
<     public function iPonderLife() {
<         sleep(3);
<     }
< 
<     /**
<      * This gets the window name of the new popup.
<      */
<     private function getNewPopup($originalWindowName = NULL) {
<         //Get all of the window names first
<         $names = $this->getSession()->getWindowNames();
< 
<         //Now it should be the last window name
<         $last = array_pop($names);
< 
<         if (!empty($originalWindowName)) {
<             while ($last == $originalWindowName && !empty($names)) {
<                 $last = array_pop($names);
<             }
<         }
< 
<         return $last;
<     }
< 
<     /**
<      * @Given /^I then go over to the site$/
<      */
<     public function iThenGoOverToTheSite()
<     {
<         $this->getSession()->visit('http://www.pfizerondemand.eu/uk/home');
<     }
< 
< 
<     /**
<      * @Given /^I switch to new window$/
<      */
<     public function iSwitchToNewWidow()
<     {
<         $this->getSession()->getAllWindowTitles();
<     }
< }
\ No newline at end of file
---
> }
