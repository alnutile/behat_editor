<?php
/**
 * @TODO move js files into library for angular
 *
 */
use Drupal\BehatEditorReports\BehatServiceReportsController;
use Drupal\BehatEditorReports\BehatServiceReportsModel;
use Drupal\BehatEditor\BehatPermissions;
use Drupal\BehatEditor\BehatSettingsBaseUrl;

include_once 'behat_editor_reports_service.features.inc';

function behat_editor_reports_service_permission() {
    return array(
        'report resource create' => array(
            'title' => t('Create a Report')
        ),
        'report resource view' => array(
            'title' => t('View a Report')
        ),
        'report resource delete' => array(
            'title' => t('Delete a Report')
        ),
        'report resource edit' => array(
            'title' => t('Edit a Report')
        ),
        'report resource view all' => array(
            'title' => t('View all Reports')
        ),
    );
}


function behat_editor_reports_service_get($id) {
    watchdog('test_rest', print_r($id, 1));
    return array("OK");
}

function behat_editor_reports_service_create($results) {
    watchdog('test_rest', print_r($results, 1));
    return array("OK");
}


function behat_editor_reports_service_update($results) {
    watchdog('test_rest', print_r($results, 1));
    return array("OK");
}

function behat_editor_reports_service_delete($id) {
    watchdog('test_rest', print_r($id, 1));
    return array("OK");
}


function behat_editor_reports_service_get_all($parameters) {
    global $user;
    composer_manager_register_autoloader();
    $model = new BehatServiceReportsModel(new BehatSettingsBaseUrl(), new BehatPermissions($user->uid));
    $resource = new BehatServiceReportsController($model);
    return $resource->index(array($parameters));
}

/**
 * Implements hook_services_resources()
 */
function behat_editor_reports_service_services_resources() {
    return array(
        'reports' => array(
            'retrieve' => array(
                'help' => 'Retrieve a report record',
                'callback' => 'behat_editor_reports_service_get',
                'access callback' => 'behat_editor_reports_service_access',
                'access arguments' => array('report resource view'),
                'access arguments append' => TRUE,
                'args' => array(
                    array(
                        'name' => 'rid',
                        'type' => 'int',
                        'description' => 'the report id (rid)',
                        'source' => array('path' => '0'),
                        'optional' => FALSE,
                    ),
                ),
            ),
            'create' => array(
                'help' => 'Create a report record',
                'callback' => 'behat_editor_reports_service_create',
                'access callback' => 'behat_editor_reports_service_access',
                'access arguments' => array('report resource create'),
                'access arguments append' => FALSE,
                'args' => array(
                    array(
                        'name' => 'data',
                        'type' => 'struct',
                        'description' => 'The results structure and settings',
                        'source' => 'data',
                        'optional' => FALSE,
                    ),
                ),
            ),
            'update' => array(
                'help' => 'Create a report record',
                'callback' => 'behat_editor_reports_service_update',
                'access callback' => 'behat_editor_reports_service_access',
                'access arguments' => array('report resource update'),
                'access arguments append' => FALSE,
                'args' => array(
                    array(
                        'name' => 'rid',
                        'type' => 'int',
                        'description' => 'the report id (rid)',
                        'source' => array('path' => '0'),
                        'optional' => FALSE,
                    ),
                    array(
                        'name' => 'data',
                        'type' => 'struct',
                        'description' => 'The results structure and settings',
                        'source' => 'data',
                        'optional' => FALSE,
                    ),
                ),
            ),
            'delete' => array(
                'help' => 'Delete a report record',
                'callback' => 'behat_editor_reports_service_delete',
                'access callback' => 'behat_editor_reports_service_access',
                'access arguments' => array('report resource delete'),
                'access arguments append' => TRUE,
                'args' => array(
                    array(
                        'name' => 'rid',
                        'type' => 'int',
                        'description' => 'the report id (rid)',
                        'source' => array('path' => '0'),
                        'optional' => FALSE,
                    ),
                ),
            ),
            'index' => array(
                'help' => 'Retrieves a listing of reports filtered by tag and or browser and or pass fail etc',
                'callback' => 'behat_editor_reports_service_get_all',
                'access callback' => 'behat_editor_reports_service_access',
                'access arguments' => array('report resource view all'),
                'access arguments append' => FALSE,
                'args' => array(
                    array(
                        'name' => 'parameters',
                        'type' => 'array',
                        'description' => 'keys are tags, batch browsers pass/fail',
                        'source' => 'param',
                        'optional' => TRUE,
                        'default value' => array(),
                    ),
                ),
            ),
        ),
    );
}

function behat_editor_reports_service_access($op, $args = array()) {
    global $user;
    $access = FALSE;
    if(user_access($op)) {
        return TRUE;
    } else {
        return FALSE;
    }
}


function behat_editor_reports_service_menu() {

    $items['admin/behat/reports'] =  array(
        'title' => t('Reports all'),
        'access arguments' => array('report resource view all'),
        'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
        'weight' => 20,
        'page callback' => 'behat_editor_reports_service_reports',
    );

    $items['admin/behat/reports/all'] = array(
        'title' => t('Reports all'),
        'type' => MENU_DEFAULT_LOCAL_TASK ,
        'weight' => -10,
    );

    $items['behat_editor_reports_service/tpl/behat_editor_reports_service_reports_tpl'] = array(
        'page callback' => 'behat_editor_reports_service_reports_all',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,

    );
    return $items;
}

function behat_editor_reports_service_reports_all(){
    return theme('behat_editor_reports_service_reports_all');
}

function behat_editor_reports_service_reports() {
    angularjs_init_application('behat_reports');
    $path = drupal_get_path('module', 'behat_editor_reports_service');
    drupal_add_js($path . '/js/libraries/ngtable/ng-table.min.js');
    drupal_add_css($path . '/js/libraries/ngtable/ng-table.min.css');
    drupal_add_css($path . '/css/app.css');
    drupal_add_js($path . '/js/ng-google-chart.js');
    drupal_add_js($path . '/js/filters/report-filters.js');
    drupal_add_js($path . '/js/services.js');
    drupal_add_js($path . '/js/reportsController.js');
    drupal_add_js($path . '/js/gcharts.js');
    drupal_add_js($path . '/js/filters/report-filters.js');
    drupal_add_js($path . '/js/app.js');

    return theme('behat_reports');
}

function behat_editor_reports_service_theme() {
    $themes = array();

    $themes['behat_reports'] = array(
        'template' => 'theme/reports',
        'parameters' => array(),
    );

    $themes['behat_editor_reports_service_reports_all'] = array(
        'template' => 'theme/reports-all',
        'parameters' => array(
            'query' => array(),
        ),
    );

    return $themes;
}