<?php

define('BEHAT_EDITOR_FOLDER', 'behat_features');
define('BEHAT_EDITOR_DEFAULT_FOLDER', 'behat_tests');
define('BEHAT_EDITOR_DEFAULT_STORAGE_FOLDER', 'behat_tests');

function behat_editor_permission() {
    $items['behat view test'] = array(
       'title' => t('View a test file'),
       'description' => t('Can view a singular test')
    );
    $items['behat view all tests'] = array(
        'title' => t('View all test file'),
        'description' => t('Can view all tests')
    );
    $items['behat add test'] = array(
        'title' => t('Add a test'),
        'description' => t('Can add a test')
    );
    $items['behat run test'] = array(
        'title' => t('Can run a test'),
        'description' => t('Can run a test')
    );
    $items['behat edit test'] = array(
        'title' => t('Can edit a test'),
        'description' => t('Can edit a test')
    );
    $items['behat delete test'] = array(
        'title' => t('Can delete a test'),
        'description' => t('Can delete a test')
    );
   return $items;
}

function behat_editor_menu() {
    $path = drupal_get_path('module', 'behat_editor');
    $items['admin/behat/index'] = array(
        'page callback' => 'behat_editor_index',
        'access arguments' => array('behat view all tests'),
        'file' => 'behat_editor_index.inc',
        'file path' => "$path/controllers/"
    );
    $items['admin/behat/view/%/%'] = array(
        'page callback' => 'behat_editor_view',
        'page arguments' => array(3,4),
        'access arguments' => array('behat view test'),
        'file' => 'behat_editor_view.inc',
        'file path' => "$path/controllers/"
    );
    $items['admin/behat/run/%/%'] = array(
        'page callback' => array('behat_editor_run'),
        'page arguments' => array(3,4),
        'file' => 'behat_editor_run.inc',
        'access arguments' => array('behat run test'),
        'file path' => "$path/controllers"
    );
    $items['admin/behat/add'] = array(
        'page callback' => 'drupal_get_form',
        'page arguments' => array('behat_editor_add_form'),
        'access arguments' => array('behat add test'),
        'file' => 'behat_editor_add.inc',
        'file path' => "$path/controllers/"
    );
    return $items;
}

function behat_editor_theme() {
    $items['behat_editor_file_to_html_view'] = array(
        'variables' => array(
            'file_text' => NULL,
        ),
        'file' => 'tpl/behat_shared_views.inc'
    );

    $items['behat_editor_results_area'] = array(
        'variables' => array(
            'params' => NULL
        ),
        'file' => 'tpl/behat_shared_views.inc',
        'template' => 'tpl/behat-editor-results-area'
    );
    $items['behat_editor_view_questions_area'] = array(
        'variables' => array(
            'actions' => NULL,
            'questions' => NULL
        ),
        'file' => 'tpl/behat_shared_views.inc',
        'template' => 'tpl/behat-editor-view-questions-area'
    );
    $items['behat_editor_questions_area_edit'] = array(
        'variables' => array(
            'params' => NULL
        ),
        'file' => 'tpl/behat_shared_views.inc',
        'template' => 'tpl/behat-editor-questions-area-edit'
    );
    $items['behat_editor_questions_area_intro'] = array(
        'variables' => array(),
        'file' => 'tpl/behat_shared_views.inc',
        'template' => 'tpl/behat-editor-questions-area-intro'
    );
    $items['behat_editor_create_file'] = array(
        'variables' => array(
            'scenario' => NULL,
        ),
        'file' => 'tpl/behat_shared_views.inc',
    );
    return $items;
}



function behat_editor_page_build(&$page) {
    dpm($page);
}

function behat_editor_library() {
    $path = drupal_get_path('module', 'behat_editor');
    $libraries['tag_it'] = array(
        'title' => 'jQuery Tagp-it',
        'website' => "http://aehlke.github.io/tag-it/",
        'version' => '2.0-x',
        'js' => array(
            $path . '/libraries/tag-it/js/tag-it.js' => array(),
        ),
        'css' => array(
            $path . '/libraries/tag-it/css/jquery.tagit.css' => array(
                'type' => 'file',
                'media' => 'screen'
            ),
            $path . '/libraries/tag-it/css/tagit.ui-zendesk.css' => array(
                'type' => 'file',
                'media' => 'screen'
            )
        )
    );
    return $libraries;
}
