<?php

define('BEHAT_EDITOR_FOLDER', 'behat_features');
define('BEHAT_EDITOR_DEFAULT_FOLDER', 'behat_tests');
define('BEHAT_EDITOR_DEFAULT_STORAGE_FOLDER', 'behat_tests');

function behat_editor_permission() {
    $items['behat view test'] = array(
       'title' => t('View a test file'),
       'description' => t('Can view a singular test')
    );
    $items['behat view all tests'] = array(
        'title' => t('View all test file'),
        'description' => t('Can view all tests')
    );
    $items['behat add test'] = array(
        'title' => t('Add a test'),
        'description' => t('Can add a test')
    );
    $items['behat run test'] = array(
        'title' => t('Can run a test'),
        'description' => t('Can run a test')
    );
    $items['behat edit test'] = array(
        'title' => t('Can edit a test'),
        'description' => t('Can edit a test')
    );
    $items['behat delete test'] = array(
        'title' => t('Can delete a test'),
        'description' => t('Can delete a test')
    );
   return $items;
}

function behat_editor_menu() {
    $path = drupal_get_path('module', 'behat_editor');
    $items['admin/behat/index'] = array(
        'page callback' => 'behat_editor_index',
        'access arguments' => array('behat view all tests'),
        'file' => 'behat_editor_index.inc',
        'file path' => "$path/includes/"
    );
    $items['admin/behat/view/%/%'] = array(
        'page callback' => 'drupal_get_form',
        'page arguments' => array('behat_editor_view_form', 3,4),
        'access arguments' => array('behat view test'),
        'file' => 'behat_editor_view.inc',
        'file path' => "$path/includes/"
    );
    $items['admin/behat/run/%/%'] = array(
        'page callback' => array('behat_editor_run'),
        'page arguments' => array(3,4),
        'file' => 'behat_editor_run.inc',
        'access arguments' => array('behat run test'),
        'file path' => "$path/includes"
    );
    $items['admin/behat/add'] = array(
        'page callback' => 'drupal_get_form',
        'page arguments' => array('behat_editor_add_form'),
        'access arguments' => array('behat add test'),
        'file' => 'behat_editor_add.inc',
        'file path' => "$path/includes/"
    );
    $items['admin/behat/edit/%/%'] = array(
        'page callback' => 'drupal_get_form',
        'page arguments' => array('behat_editor_edit_form', 3, 4),
        'access arguments' => array('behat edit test'),
        'file' => 'behat_editor_edit.inc',
        'file path' => "$path/includes/"
    );
    $items['admin/behat/save/%/%'] = array(
        'page callback' => array('behat_editor_save'),
        'page arguments' => array(3,4),
        'file' => 'behat_editor_save.inc',
        'access arguments' => array('behat add test'),
        'file path' => "$path/includes"
    );
    return $items;
}

function behat_editor_theme() {
    $items['behat_editor_view'] = array(
        'variables' => array(
            'params' => NULL,
        ),
        'file' => 'tpl/behat_shared_views.inc'
    );
    $items['behat_editor_file_to_html_view'] = array(
        'variables' => array(
            'file_text' => NULL,
        ),
        'file' => 'tpl/behat_shared_views.inc'
    );
    $items['behat_editor_file_to_html_edit'] = array(
        'variables' => array(
            'file_text' => NULL,
        ),
        'file' => 'tpl/behat_shared_views.inc'
    );
    $items['behat_editor_results_area'] = array(
        'variables' => array(
            'params' => NULL
        ),
        'file' => 'tpl/behat_shared_views.inc',
        'template' => 'tpl/behat-editor-results-area'
    );
    $items['behat_editor_view_questions_area'] = array(
        'variables' => array(
            'actions' => NULL,
            'questions' => NULL
        ),
        'file' => 'tpl/behat_shared_views.inc',
        'template' => 'tpl/behat-editor-view-questions-area'
    );
    $items['behat_editor_questions_area_edit'] = array(
        'variables' => array(
            'params' => NULL
        ),
        'file' => 'tpl/behat_shared_views.inc',
        'template' => 'tpl/behat-editor-questions-area-edit'
    );
    $items['behat_editor_questions_area_intro'] = array(
        'variables' => array(),
        'file' => 'tpl/behat_shared_views.inc',
        'template' => 'tpl/behat-editor-questions-area-intro'
    );
    $items['behat_editor_item_list'] = array(
        'variables' => array(
            'items' => NULL,
            'attributes' => NULL,
        ),
        'file' => 'tpl/behat_shared_views.inc',
    );
    return $items;
}

function behat_editor_library() {
    $path = drupal_get_path('module', 'behat_editor');
    $libraries['tag_it'] = array(
        'title' => 'jQuery Tagp-it',
        'website' => "http://aehlke.github.io/tag-it/",
        'version' => '2.0-x',
        'js' => array(
            $path . '/libraries/tag-it/js/tag-it.js' => array(),
        ),
        'css' => array(
            $path . '/libraries/tag-it/css/jquery.tagit.css' => array(
                'type' => 'file',
                'media' => 'screen'
            ),
            $path . '/libraries/tag-it/css/tagit.ui-zendesk.css' => array(
                'type' => 'file',
                'media' => 'screen'
            )
        )
    );
    $libraries['data_table'] = array(
        'title' => 'DataTable',
        'website' => "http://datatables.net/",
        'version' => '1.9',
        'js' => array(
            $path . '/libraries/datatables/media/js/jquery.dataTables.js' => array(),
        ),
        'css' => array(
            $path . '/libraries/datatables/media/css/jquery.dataTables.css' => array(
                'type' => 'file',
                'media' => 'screen'
            )
        )
    );
    return $libraries;
}

function behat_editor_form_alter(&$form, $form_state, $form_id) {
    $forms = array('behat_editor_view_form', 'behat_editor_edit_form', 'behat_editor_add_form');
    if(in_array($form_id, $forms)) {
        $vendor = composer_manager_vendor_dir();
        if(!file_exists($vendor)) {
            drupal_set_message(t("You do not have a vendor folder setup. Did you finish setting up Composer Manager?", 'error'));
        } elseif(!file_exists($vendor .'/behat/behat/bin/behat' )) {
            drupal_set_message(t('You do not have a behat loaded yet. Did you run !composer_install via the Composer Manager?',
                array('!composer_install' => l('composer install', 'admin/config/system/composer-manager'))), 'error');
        }
        drupal_set_message(t('!icon Any @javascript tag will not be run. Only on SauceLabs can that tag be used.', array('!icon' => '<i class="icon-comment icon-white"></i>')), 'info');
    }
}

function _behat_editor_behat_bin_folder() {
    return composer_manager_vendor_dir() . '/behat/behat/';
}


function behat_editor_page_alter(&$page) {

}

/**
 * Implements hook_help().
 */
function behat_editor_help($path, $arg) {
    $output = NULL;

    switch ($path) {
        case 'admin/help#behat_editor':
            $output = '<p>' . t('Visit the <a href="@handbook_url">Behat Editor Handbook</a> for help and information.', array('@handbook_url' => 'http://comingsoon.com')) . '</p>';
            break;
        case 'admin/behat/index':
            $output = '<p>' . t('Below are all the feature files found in behat_features folders of all enabled modules') . '</p>';
            $output .= '<p>' . t('From here you can View and Run a test. Or Add a new test.') . '</p>';
            break;
        case 'admin/behat/view/%/%':
            $output = '<p>' . t('You are viewing a file. You can edit or run a test as needed') . '</p>';
            break;
        case 'admin/behat/add':
            $output = '<p>' . t('This will create a new test file. As you make it feel free to Run a test.') . '</p>';
            break;
        case 'admin/behat/edit':
            $output = '<p>' . t('You are editing a file on the system. As you Run or click Save your test will be written back to the file.') . '</p>';
            break;
    }
    return $output;
}


/**
 * Make link to file but
 * Protect Private file output
 *
 * @param $file_name
 * @param $module_name
 * @return string
 */
function _show_file_link($file_name, $module_name) {
    if(strpos($file_name, 'private_') === FALSE ) {
        $results = l($file_name, 'admin/behat/view/' . $module_name . '/' . $file_name);
    } else {
        $results = $file_name;
    }
    return $results;
}

/**
 * Show module name if private or not
 */
function _show_module_name($file_name, $module_name) {
    if(strpos($file_name, 'private_') === FALSE ) {
        $results = $module_name;
    } else {
        $results = 'private';
    }
    return $results;
}

/**
 * Make link to actions but
 * Protect Private file output
 *
 * @param $file_name
 * @param $module_name
 * @return string
 */

function _show_link($file_name, $module_name, $link_text = 'view') {
    if(strpos($file_name, 'private_') === FALSE ) {
        $results = l($link_text, 'admin/behat/'.$link_text.'/' . $module_name . '/' . $file_name);
    } else {
        $results = 'not allowed';
    }
    return $results;
}